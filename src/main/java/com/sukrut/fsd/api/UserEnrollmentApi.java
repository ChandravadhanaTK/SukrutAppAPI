/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sukrut.fsd.api;

import com.sukrut.fsd.model.VendorsList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-06-14T04:59:45.171+05:30")

@Api(value = "userEnrollment", description = "the userEnrollment API")
public interface UserEnrollmentApi {

    @ApiOperation(value = "push Notification to User.", nickname = "getUserDetails", notes = "retrieve user details, this will include mobile device information.", response = VendorsList.class, responseContainer = "List", tags={ "userEnrollment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = VendorsList.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid User ID supplied"),
        @ApiResponse(code = 404, message = "details of User ID not found") })
    @RequestMapping(value = "/userEnrollment/pushNotification",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<VendorsList>> getUserDetails(@NotNull @ApiParam(value = "details on UserID to return", required = true) @Valid @RequestParam(value = "UserID", required = true) String userID);


    @ApiOperation(value = "Get Approved Vendor List - GPS ON", nickname = "getVendorList", notes = "Returns the Get List of Approved Vendor Store List, within the radius of User Geolocation", response = VendorsList.class, responseContainer = "List", tags={ "userEnrollment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = VendorsList.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid latitude and longitude supplied"),
        @ApiResponse(code = 404, message = "vendorsList not found") })
    @RequestMapping(value = "/userEnrollment/gpson/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<VendorsList>> getVendorList(@NotNull @ApiParam(value = "ID of vendors to return", required = true) @Valid @RequestParam(value = "latitude", required = true) String latitude,@NotNull @ApiParam(value = "ID of vendors to return", required = true) @Valid @RequestParam(value = "longitude", required = true) String longitude);

}
