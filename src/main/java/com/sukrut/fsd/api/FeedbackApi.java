/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sukrut.fsd.api;

import com.sukrut.fsd.model.Feedback;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-06-14T04:59:45.171+05:30")

@Api(value = "feedback", description = "the feedback API")
public interface FeedbackApi {

    @ApiOperation(value = "Add Referal Bonus", nickname = "addOffers", notes = "Successful Referal will be Rewarded", tags={ "feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/feedback/new",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> addOffers(@ApiParam(value = "Refer & Earn only for the contacts" ,required=true )  @Valid @RequestBody Feedback body);


    @ApiOperation(value = "Get User Comments", nickname = "getComments", notes = "Returns the comments from the user", response = Feedback.class, responseContainer = "List", tags={ "feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Feedback.class, responseContainer = "List") })
    @RequestMapping(value = "/feedback/all",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Feedback>> getComments();

}
